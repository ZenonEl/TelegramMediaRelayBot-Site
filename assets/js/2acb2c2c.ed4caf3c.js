"use strict";(self.webpackChunktelegram_media_relay_bot_site=self.webpackChunktelegram_media_relay_bot_site||[]).push([[299],{2496:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"installation","title":"\ud83d\udee0 Installation and Configuration","description":"\ud83d\udccb System Requirements","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/installation.md","sourceDirName":".","slug":"/installation","permalink":"/TelegramMediaRelayBot-Site/docs/installation","draft":false,"unlisted":false,"editUrl":"https://github.com/ZenonEl/TelegramMediaRelayBot-Site/edit/main/docs/installation.md","tags":[],"version":"current","lastUpdatedBy":"ZenonEl","lastUpdatedAt":1753599553000,"frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"\ud83c\udf0c Introduction","permalink":"/TelegramMediaRelayBot-Site/docs/"},"next":{"title":"\ud83d\udcac Usage","permalink":"/TelegramMediaRelayBot-Site/docs/usage"}}');var s=t(4848),r=t(8453);const l={},i="\ud83d\udee0 Installation and Configuration",o={},d=[{value:"\ud83d\udccb System Requirements",id:"-system-requirements",level:2},{value:"Core Components",id:"core-components",level:3},{value:"Supported OS",id:"supported-os",level:3},{value:"\ud83d\ude80 Quick Start for Linux",id:"-quick-start-for-linux",level:2},{value:"For Debian/Ubuntu:",id:"for-debianubuntu",level:4},{value:"For Arch Linux:",id:"for-arch-linux",level:4},{value:"For Fedora/RHEL:",id:"for-fedorarhel",level:4},{value:"1.1 Running via Executable",id:"11-running-via-executable",level:4},{value:"<strong>2. Configuring MySQL/MariaDB</strong>",id:"2-configuring-mysqlmariadb",level:3},{value:"<strong>2.1 Creating a Database and User</strong>",id:"21-creating-a-database-and-user",level:4},{value:"<strong>2.2 Configuration Setup</strong>",id:"22-configuration-setup",level:4},{value:"3. Working with Configuration",id:"3-working-with-configuration",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"-installation-and-configuration",children:"\ud83d\udee0 Installation and Configuration"})}),"\n",(0,s.jsx)(n.h2,{id:"-system-requirements",children:"\ud83d\udccb System Requirements"}),"\n",(0,s.jsx)(n.h3,{id:"core-components",children:"Core Components"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Component"}),(0,s.jsx)(n.th,{children:"Version"}),(0,s.jsx)(n.th,{children:"Notes"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:".NET Runtime"}),(0,s.jsx)(n.td,{children:"8.0+"}),(0,s.jsx)(n.td,{children:"Required for running the bot"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"MySQL Server"}),(0,s.jsx)(n.td,{children:"9.3+"}),(0,s.jsx)(n.td,{children:"Need for storing data (also can use SQLite)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"yt-dlp"}),(0,s.jsx)(n.td,{children:"2025.04.09+"}),(0,s.jsx)(n.td,{children:"Must be installed in the system (or placed in the root project with an executable file)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"gallery-dl"}),(0,s.jsx)(n.td,{children:"2025.04.09+"}),(0,s.jsx)(n.td,{children:"Must be installed in the system (or placed in the root project with an executable file). Downloaded separately does not enter the release"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"supported-os",children:"Supported OS"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Linux"})," (x64): I used Linux Mint and CachyOS for development and use. Therefore, similar distributions should also work, the main thing is to have the basic components on your system"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Windows"})," 10/11 (x64) - manual build required and additional verification"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"macOS"})," (x64/ARM) - not verified"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-quick-start-for-linux",children:"\ud83d\ude80 Quick Start for Linux"}),"\n",(0,s.jsx)(n.p,{children:"Before you start working with the project, you need to install the necessary tools. Run the following commands if you don't have them already:"}),"\n",(0,s.jsx)(n.h4,{id:"for-debianubuntu",children:"For Debian/Ubuntu:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"showLineNumbers",children:"# Install .NET 8\nwget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb\nsudo dpkg -i packages-microsoft-prod.deb\nsudo apt update && sudo apt install -y dotnet-sdk-8.0 git mysql-server libicu-dev\n\n# Clone and configure\ngit clone https://github.com/ZenonEl/TelegramMediaRelayBot. git\ncd TelegramMediaRelayBot\n# Download the gallery-dl binary (if you want to use it)\nwget https://github.com/mikf/gallery-dl/releases/latest/download/gallery-dl.bin -O gallery-dl.bin\nchmod +x gallery-dl\n\n# Run\ndotnet run --project TelegramMediaRelayBot.csproj\n"})}),"\n",(0,s.jsx)(n.h4,{id:"for-arch-linux",children:"For Arch Linux:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"showLineNumbers",children:"# Install dependencies\nsudo pacman -S dotnet-sdk git mariadb icu\n\n# Clone and customize\ngit clone https://github.com/ZenonEl/TelegramMediaRelayBot. git\ncd TelegramMediaRelayBot\n# Download the gallery-dl binary (if you want to use it)\nwget https://github.com/mikf/gallery-dl/releases/latest/download/gallery-dl.bin -O gallery-dl.bin\nchmod +x gallery-dl\n\n# Run\ndotnet run --project TelegramMediaRelayBot.csproj\n"})}),"\n",(0,s.jsx)(n.h4,{id:"for-fedorarhel",children:"For Fedora/RHEL:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"showLineNumbers",children:"# Install . NET 8\nsudo rpm -Uvh https://packages.microsoft.com/config/rhel/8/packages-microsoft-prod.rpm\nsudo dnf install -y dotnet-sdk-8.0 git mysql-server libicu\n\n# Clone and configure\ngit clone https://github.com/ZenonEl/TelegramMediaRelayBot.git\ncd TelegramMediaRelayBot\n# Download the gallery-dl binary (if you want to use it)\nwget https://github.com/mikf/gallery-dl/releases/latest/download/gallery-dl.bin -O gallery-dl.bin\nchmod +x gallery-dl\n\n# Run\ndotnet run --project TelegramMediaRelayBot.csproj\n"})}),"\n",(0,s.jsx)(n.h4,{id:"11-running-via-executable",children:"1.1 Running via Executable"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Download the latest ",(0,s.jsx)(n.a,{href:"https://github.com/ZenonEl/TelegramMediaRelayBot/releases/latest",children:"release"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Extract the archive to a convenient location."}),"\n",(0,s.jsxs)(n.li,{children:["Create the ",(0,s.jsx)(n.code,{children:"appsettings.json"})," file:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Use the example configuration from ",(0,s.jsx)(n.code,{children:"appsettings.json.example"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Download gallery-dl (If you want to use it):","\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"showLineNumbers",children:"wget https://github.com/mikf/gallery-dl/releases/latest/download/gallery-dl.bin -O gallery-dl.bin\nchmod +x gallery-dl\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Run the executable:\n",(0,s.jsx)(n.strong,{children:"Ensure all other setup steps are completed before running."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"showLineNumbers",children:"./TelegramMediaRelayBot\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"2-configuring-mysqlmariadb",children:(0,s.jsx)(n.strong,{children:"2. Configuring MySQL/MariaDB"})}),"\n",(0,s.jsx)(n.h4,{id:"21-creating-a-database-and-user",children:(0,s.jsx)(n.strong,{children:"2.1 Creating a Database and User"})}),"\n",(0,s.jsx)(n.p,{children:"Run the following commands in MySQL/MariaDB to create a database and user:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sql",metastring:"showLineNumbers",children:"-- Create the database\nCREATE DATABASE TelegramMediaRelayBot;\n\n-- Create the user and set the password\nCREATE USER 'media_bot'@'localhost' IDENTIFIED BY 'StrongPassword123!';\n\n-- Grant privileges to the user for the database\nGRANT ALL PRIVILEGES ON TelegramMediaRelayBot.* TO 'media_bot'@'localhost';\n\n-- Apply changes\nFLUSH PRIVILEGES;\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h4,{id:"22-configuration-setup",children:(0,s.jsx)(n.strong,{children:"2.2 Configuration Setup"})}),"\n",(0,s.jsxs)(n.p,{children:["After configuring MySQL/MariaDB, update the ",(0,s.jsx)(n.code,{children:"appsettings.json"})," configuration file. Make sure that the following parameters match your MySQL/MariaDB configuration:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'{\n    "AppSettings": {\n        "SqlConnectionString": "Server=localhost;Database=TelegramMediaRelayBot;User ID=media_bot;Password=StrongPassword123!;",\n        "DatabaseType": "MySQL",\n        "DatabaseName": "TelegramMediaRelayBot"\n    }\n}\n\n# Also supported SQLite\n{\n    "AppSettings": {\n        "SqlConnectionString": "Data Source=sqlite.db",\n        "DatabaseType": "SQLite",\n        "DatabaseName": "TelegramMediaRelayBot"\n    }\n}\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Server"}),": MySQL server address (usually ",(0,s.jsx)(n.code,{children:"localhost"})," if MySQL is installed on the same server or PC)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Database"}),": Database name (in this case, ",(0,s.jsx)(n.code,{children:"TelegramMediaRelayBot"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"User ID"}),": Username (in this case, ",(0,s.jsx)(n.code,{children:"media_bot"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Password"}),": User password (in this case, ",(0,s.jsx)(n.code,{children:"StrongPassword123!"}),")."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"3-working-with-configuration",children:"3. Working with Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",metastring:"showLineNumbers",children:"cp appsettings.json.example \\\n   appsettings.json\n\n# Edit the config\nnano ./appsettings.json\n"})}),"\n",(0,s.jsx)(n.p,{children:"Example configuration:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:'If you don\'t need Tor or other proxy, leave "Proxy" empty (""") and write false in Tor.Enabled'}),"\n",(0,s.jsx)(n.li,{children:'Apart from the values in the "AppSettings" block, you don\'t need to change anything else.'}),"\n",(0,s.jsxs)(n.li,{children:['The token for "TelegramBotToken" can only be obtained from the official Telegram bot ',(0,s.jsx)(n.a,{href:"https://t.me/BotFather",children:"BotFather"}),"."]}),"\n",(0,s.jsx)(n.li,{children:'For the "AccessPolicy" block, refer to the dedicated guide.'}),"\n",(0,s.jsx)(n.li,{children:"AccessDeniedMessageContact field in which you can specify a contact for feedback if you plan to leave the bot closed to new users."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:"showLineNumbers",children:'{\n    "AppSettings": {\n        "TelegramBotToken": "1234:abcd",\n        "SqlConnectionString": "Server=localhost;Database=DatabaseName;User ID=UserName;Password=UserPassword;",\n        "DatabaseName": "TelegramMediaRelayBot",\n        "DatabaseType": "MySql",\n        "Language": "en-US",\n        "Proxy": "socks5://127.0.0.1:9050",\n        "UserUnMuteCheckInterval": 20,\n        "UseGalleryDl": true,\n        "AccessDeniedMessageContact": ""\n    },\n    "Tor": {\n        "Enabled": true,\n        "TorControlPassword": "Password",\n        "TorSocksHost": "127.0.0.1",\n        "TorSocksPort": 9050,\n        "TorControlPort": 9051,\n        "TorChangingChainInterval": 5\n    },\n    "MessageDelaySettings": {\n        "VideoGetDelay": 1000,\n        "ContactSendDelay": 1000\n    },\n    "ConsoleOutputSettings": {\n        "LogLevel": "Information",\n        "ShowVideoDownloadProgress": false,\n        "ShowVideoUploadProgress": false\n    },\n    "AccessPolicy": {\n        "Enabled": false,\n\n        "NewUsersPolicy": {\n            "Enabled": false,\n            "ShowAccessDeniedMessage": false,\n\n            "AllowNewUsers": true,\n            "AllowRules": {\n                "AllowAll": true,\n                "WhitelistedReferrerIds": [],\n                "BlacklistedReferrerIds": []\n            }\n        }\n    }\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>i});var a=t(6540);const s={},r=a.createContext(s);function l(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);